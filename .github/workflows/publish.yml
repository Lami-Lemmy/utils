name: Publish

on:
  workflow_dispatch:

env:
  EXPO_CLI_VERSION: 4.12.3
  EXPO_SDK_VERSION: 42.0.0
  EXPO_USERNAME: ${{ secrets.EXPO_USERNAME }}
  EXPO_PASSWORD: ${{ secrets.EXPO_PASSWORD }}
  EXPO_IOS_DIST_P12_PASSWORD: ${{ secrets.EXPO_IOS_DIST_P12_PASSWORD }}
  EXPO_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.EXPO_ANDROID_KEYSTORE_PASSWORD }}
  EXPO_ANDROID_KEY_PASSWORD: ${{ secrets.EXPO_ANDROID_KEY_PASSWORD }}

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.6.2]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - uses: expo/expo-github-action@v6
        with:
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install Dependencies
        run: yarn -s --frozen-lockfile

      - name: Publish App
        run: yarn lerna exec --scope @utils/app yarn expo publish

  # build_ios:
  #   name: Build iOS
  #   runs-on: macos-latest
  #   needs: [publish]

  #   strategy:
  #     matrix:
  #       node-version: [16.6.2]

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node-version }}

  #     - uses: maxim-lobanov/setup-xcode@v1
  #       with:
  #         xcode-version: latest-stable

  #     - run: sudo xcodebuild -license accept

  #     - run: brew install fastlane

  #     - uses: expo/expo-github-action@v6
  #       with:
  #         expo-version: ${{ env.EXPO_CLI_VERSION }}
  #         token: ${{ secrets.EXPO_TOKEN }}

  #     - run: ./.github/scripts/decrypt.sh
  #       env:
  #         DECRYPT_PASSWORD: ${{ secrets.DECRYPT_PASSWORD }}

  #     - name: Install Dependencies
  #       run: |
  #         npm i -g turtle-cli
  #         yarn -s --frozen-lockfile

  #     - run: cd packages/app

  #     - name: Setup Turtle
  #       run: turtle setup:ios --sdk-version ${{ env.EXPO_SDK_VERSION }}

  #     - name: Build App
  #       run: turtle build:android -t archive -o ~/utils.ipa --team-id ${{ secrets.EXPO_APPLE_TEAM_ID }} --dist-p12-path ./.github/secrets/utils_dist.p12 --provisioning-profile-path ./.github/secrets/utils.mobileprovision

  #     - name: Archive IPA
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: utils.ipa
  #         path: ~/utils.ipa

  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [publish]

    strategy:
      matrix:
        node-version: [16.6.2]
        java-version: [8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up Java ${{ matrix.java-version }}
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: ${{ matrix.java-version }}

      - uses: expo/expo-github-action@v6
        with:
          expo-version: ${{ env.EXPO_CLI_VERSION }}
          token: ${{ secrets.EXPO_TOKEN }}

      - run: ./.github/scripts/decrypt.sh
        env:
          DECRYPT_PASSWORD: ${{ secrets.DECRYPT_PASSWORD }}

      - name: Install Dependencies
        run: |
          npm i -g turtle-cli
          yarn -s --frozen-lockfile

      - run: cd packages/app

      - name: Setup Turtle
        run: turtle setup:android --sdk-version ${{ env.EXPO_SDK_VERSION }}

      - name: Build App
        run: turtle build:android -t apk -o ~/utils.apk --keystore-path ./.github/secrets/utils.jks --keystore-alias ${{ secrets.EXPO_ANDROID_KEYSTORE_ALIAS }}

      - name: Archive APK
        uses: actions/upload-artifact@v2
        with:
          name: utils.apk
          path: ~/utils.apk
